/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define default_layer 0
#define lower_layer   1
#define raise_layer   2
#define both_layer    3

/ {
    combos {
        compatible = "zmk,combos";

        combo_caps_word {
            timeout-ms = <300>;
            key-positions = <13 22>;
            bindings = <&caps_word>;
        };
    };
};

/ {
    behaviors {
        HomeMods: HomeMods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEMODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
        };

        quotes: quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTES";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;

            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q                   &kp W                 &kp E              &kp R             &kp T        &kp Y    &kp U             &kp I              &kp O                  &kp P                       &trans
&trans  &HomeMods LEFT_SHIFT A  &HomeMods LEFT_ALT S  &HomeMods LCTRL D  &HomeMods LGUI F  &kp G        &kp H    &HomeMods RGUI J  &HomeMods RCTRL K  &HomeMods RIGHT_ALT L  &HomeMods RIGHT_SHIFT SEMI  &trans
&trans  &kp Z                   &kp X                 &kp C              &kp V             &kp B        &kp N    &kp M             &kp COMMA          &kp DOT                &kp FSLH                    &trans
                                                      &kp BACKSPACE      &mo 1             &kp SPACE    &kp RET  &mo 2             &kp TAB
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5   |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | LCTRL|  F1 |  F2 |  F3 |  F4 | LG(C)|   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |  F5 |  F6 |  F7 |  F8 | LG(V)|   | F9  | F10 | F11 | F12 |     |      |
            //                    | GUI |     | SPC  |   | ENT | BOTH| ALT |

            bindings = <
&trans  &kp N1                       &kp N2        &kp N3         &kp N4    &kp N5       &kp N6    &kp N7                    &kp N8              &kp N9                     &kp N0      &trans
&trans  &HomeMods LEFT_SHIFT ESCAPE  &kp LEFT_ALT  &kp LCTRL      &kp LGUI  &kp LG(C)    &kp LEFT  &HomeMods RIGHT_GUI DOWN  &HomeMods RCTRL UP  &HomeMods RIGHT_ALT RIGHT  &kp RSHIFT  &trans
&trans  &trans                       &trans        &trans         &trans    &kp LG(V)    &trans    &trans                    &trans              &trans                     &trans      &trans
                                                   &kp BACKSPACE  &trans    &kp SPACE    &kp RET   &mo 3                     &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI | BOTH| SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL    &kp AT        &kp HASH       &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS              &kp ASTRK             &kp LPAR                  &kp RPAR               &trans
&trans  &kp LSHIFT  &kp LEFT_ALT  &kp LCTRL      &kp LGUI  &trans       &kp MINUS  &HomeMods RGUI EQUAL  &HomeMods RCTRL LBKT  &HomeMods RIGHT_ALT RBKT  &HomeMods RSHIFT BSLH  &trans
&trans  &kp TILDE   &trans        &kp GRAVE      &quotes   &trans       &kp UNDER  &kp PLUS              &kp LBRC              &kp RBRC                  &kp PIPE               &trans
                                  &kp BACKSPACE  &mo 3     &kp SPACE    &kp RET    &trans                &kp TAB
            >;
        };

        both_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |     |     |     |     |     |   |     | VUP |     |     |     |      |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |     | VDW |     |     |     |      |
            // | SHFT |     |     |     |     |     |   |     | MUT |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1               &kp F2                 &kp F3              &kp F4             &trans       &bt BT_SEL 0  &bt BT_SEL 1                  &bt BT_SEL 2            &bt BT_SEL 3                  &bt BT_CLR_ALL   &trans
&trans  &HomeMods LSHIFT F5  &HomeMods LEFT_ALT F6  &HomeMods LCTRL F7  &HomeMods LGUI F8  &trans       &trans        &HomeMods RIGHT_GUI C_VOL_DN  &HomeMods RCTRL C_MUTE  &HomeMods RIGHT_ALT C_VOL_UP  &kp RIGHT_SHIFT  &trans
&trans  &kp F9               &kp F10                &kp F11             &kp F12            &trans       &trans        &kp C_PREV                    &kp K_PLAY_PAUSE        &kp C_NEXT                    &trans           &trans
                                                    &kp BACKSPACE       &trans             &kp SPACE    &kp RET       &trans                        &kp TAB
            >;
        };
    };
};
